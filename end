[33mcommit ab436e8bab2e1de463445cbe6463f6d1f6fd97d2[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: hoadohcmus <lev73314@gmail.com>
Date:   Sun Nov 28 01:01:32 2021 +0700

    Add sample code of the blog

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..986f118[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,272 @@[m
[32m+[m[32m### Python template[m
[32m+[m[32m# Byte-compiled / optimized / DLL files[m
[32m+[m[32m__pycache__/[m
[32m+[m[32m*.py[cod][m
[32m+[m[32m*$py.class[m
[32m+[m
[32m+[m[32m# C extensions[m
[32m+[m[32m*.so[m
[32m+[m
[32m+[m[32m# Distribution / packaging[m
[32m+[m[32m.Python[m
[32m+[m[32mbuild/[m
[32m+[m[32mdevelop-eggs/[m
[32m+[m[32mdist/[m
[32m+[m[32mdownloads/[m
[32m+[m[32meggs/[m
[32m+[m[32m.eggs/[m
[32m+[m[32mlib/[m
[32m+[m[32mlib64/[m
[32m+[m[32mparts/[m
[32m+[m[32msdist/[m
[32m+[m[32mvar/[m
[32m+[m[32mwheels/[m
[32m+[m[32m*.egg-info/[m
[32m+[m[32m.installed.cfg[m
[32m+[m[32m*.egg[m
[32m+[m
[32m+[m[32m# PyInstaller[m
[32m+[m[32m#  Usually these files are written by a python script from a template[m
[32m+[m[32m#  before PyInstaller builds the exe, so as to inject date/other infos into it.[m
[32m+[m[32m*.manifest[m
[32m+[m[32m*.spec[m
[32m+[m
[32m+[m[32m# Installer logs[m
[32m+[m[32mpip-log.txt[m
[32m+[m[32mpip-delete-this-directory.txt[m
[32m+[m
[32m+[m[32m# Unit test / coverage reports[m
[32m+[m[32mhtmlcov/[m
[32m+[m[32m.tox/[m
[32m+[m[32m.coverage[m
[32m+[m[32m.coverage.*[m
[32m+[m[32m.cache[m
[32m+[m[32mnosetests.xml[m
[32m+[m[32mcoverage.xml[m
[32m+[m[32m*.cover[m
[32m+[m[32m.hypothesis/[m
[32m+[m
[32m+[m[32m# Translations[m
[32m+[m[32m*.mo[m
[32m+[m[32m*.pot[m
[32m+[m
[32m+[m[32m# Django stuff:[m
[32m+[m[32mstaticfiles/[m
[32m+[m
[32m+[m[32m# Sphinx documentation[m
[32m+[m[32mdocs/_build/[m
[32m+[m
[32m+[m[32m# PyBuilder[m
[32m+[m[32mtarget/[m
[32m+[m
[32m+[m[32m# pyenv[m
[32m+[m[32m.python-version[m
[32m+[m
[32m+[m[32m# celery beat schedule file[m
[32m+[m[32mcelerybeat-schedule[m
[32m+[m
[32m+[m[32m# Environments[m
[32m+[m[32m.venv[m
[32m+[m[32mvenv/[m
[32m+[m[32mENV/[m
[32m+[m[32m.envs/.env[m
[32m+[m
[32m+[m[32m# Rope project settings[m
[32m+[m[32m.ropeproject[m
[32m+[m
[32m+[m[32m# mkdocs documentation[m
[32m+[m[32m/site[m
[32m+[m
[32m+[m[32m# mypy[m
[32m+[m[32m.mypy_cache/[m
[32m+[m
[32m+[m
[32m+[m[32m### Node template[m
[32m+[m[32m# Logs[m
[32m+[m[32mlogs[m
[32m+[m[32m*.log[m
[32m+[m[32mnpm-debug.log*[m
[32m+[m[32myarn-debug.log*[m
[32m+[m[32myarn-error.log*[m
[32m+[m
[32m+[m[32m# Runtime data[m
[32m+[m[32mpids[m
[32m+[m[32m*.pid[m
[32m+[m[32m*.seed[m
[32m+[m[32m*.pid.lock[m
[32m+[m
[32m+[m[32m# Directory for instrumented libs generated by jscoverage/JSCover[m
[32m+[m[32mlib-cov[m
[32m+[m
[32m+[m[32m# Coverage directory used by tools like istanbul[m
[32m+[m[32mcoverage[m
[32m+[m
[32m+[m[32m# nyc test coverage[m
[32m+[m[32m.nyc_output[m
[32m+[m
[32m+[m[32m# Bower dependency directory (https://bower.io/)[m
[32m+[m[32mbower_components[m
[32m+[m
[32m+[m[32m# node-waf configuration[m
[32m+[m[32m.lock-wscript[m
[32m+[m
[32m+[m[32m# Compiled binary addons (http://nodejs.org/api/addons.html)[m
[32m+[m[32mbuild/Release[m
[32m+[m
[32m+[m[32m# Dependency directories[m
[32m+[m[32mnode_modules/[m
[32m+[m[32mjspm_packages/[m
[32m+[m
[32m+[m[32m# Typescript v1 declaration files[m
[32m+[m[32mtypings/[m
[32m+[m
[32m+[m[32m# Optional npm cache directory[m
[32m+[m[32m.npm[m
[32m+[m
[32m+[m[32m# Optional eslint cache[m
[32m+[m[32m.eslintcache[m
[32m+[m
[32m+[m[32m# Optional REPL history[m
[32m+[m[32m.node_repl_history[m
[32m+[m
[32m+[m[32m# Output of 'npm pack'[m
[32m+[m[32m*.tgz[m
[32m+[m
[32m+[m[32m# Yarn Integrity file[m
[32m+[m[32m.yarn-integrity[m
[32m+[m
[32m+[m
[32m+[m[32m### Linux template[m
[32m+[m[32m*~[m
[32m+[m
[32m+[m[32m# temporary files which can be created if a process still has a handle open of a deleted file[m
[32m+[m[32m.fuse_hidden*[m
[32m+[m
[32m+[m[32m# KDE directory preferences[m
[32m+[m[32m.directory[m
[32m+[m
[32m+[m[32m# Linux trash folder which might appear on any partition or disk[m
[32m+[m[32m.Trash-*[m
[32m+[m
[32m+[m[32m# .nfs files are created when an open file is removed but is still being accessed[m
[32m+[m[32m.nfs*[m
[32m+[m
[32m+[m
[32m+[m[32m### VisualStudioCode template[m
[32m+[m[32m.vscode/*[m
[32m+[m[32m!.vscode/settings.json[m
[32m+[m[32m!.vscode/tasks.json[m
[32m+[m[32m!.vscode/launch.json[m
[32m+[m[32m!.vscode/extensions.json[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m### Windows template[m
[32m+[m[32m# Windows thumbnail cache files[m
[32m+[m[32mThumbs.db[m
[32m+[m[32mehthumbs.db[m
[32m+[m[32mehthumbs_vista.db[m
[32m+[m
[32m+[m[32m# Dump file[m
[32m+[m[32m*.stackdump[m
[32m+[m
[32m+[m[32m# Folder config file[m
[32m+[m[32mDesktop.ini[m
[32m+[m
[32m+[m[32m# Recycle Bin used on file shares[m
[32m+[m[32m$RECYCLE.BIN/[m
[32m+[m
[32m+[m[32m# Windows Installer files[m
[32m+[m[32m*.cab[m
[32m+[m[32m*.msi[m
[32m+[m[32m*.msm[m
[32m+[m[32m*.msp[m
[32m+[m
[32m+[m[32m# Windows shortcuts[m
[32m+[m[32m*.lnk[m
[32m+[m
[32m+[m
[32m+[m[32m### macOS template[m
[32m+[m[32m# General[m
[32m+[m[32m*.DS_Store[m
[32m+[m[32m.AppleDouble[m
[32m+[m[32m.LSOverride[m
[32m+[m
[32m+[m[32m# Icon must end with two \r[m
[32m+[m[32mIcon[m
[32m+[m
[32m+[m[32m# Thumbnails[m
[32m+[m[32m._*[m
[32m+[m
[32m+[m[32m# Files that might appear in the root of a volume[m
[32m+[m[32m.DocumentRevisions-V100[m
[32m+[m[32m.fseventsd[m
[32m+[m[32m.Spotlight-V100[m
[32m+[m[32m.TemporaryItems[m
[32m+[m[32m.Trashes[m
[32m+[m[32m.VolumeIcon.icns[m
[32m+[m[32m.com.apple.timemachine.donotpresent[m
[32m+[m
[32m+[m[32m# Directories potentially created on remote AFP share[m
[32m+[m[32m.AppleDB[m
[32m+[m[32m.AppleDesktop[m
[32m+[m[32mNetwork Trash Folder[m
[32m+[m[32mTemporary Items[m
[32m+[m[32m.apdisk[m
[32m+[m
[32m+[m
[32m+[m[32m### SublimeText template[m
[32m+[m[32m# Cache files for Sublime Text[m
[32m+[m[32m*.tmlanguage.cache[m
[32m+[m[32m*.tmPreferences.cache[m
[32m+[m[32m*.stTheme.cache[m
[32m+[m
[32m+[m[32m# Workspace files are user-specific[m
[32m+[m[32m*.sublime-workspace[m
[32m+[m
[32m+[m[32m# Project files should be checked into the repository, unless a significant[m
[32m+[m[32m# proportion of contributors will probably not be using Sublime Text[m
[32m+[m[32m# *.sublime-project[m
[32m+[m
[32m+[m[32m# SFTP configuration file[m
[32m+[m[32msftp-config.json[m
[32m+[m
[32m+[m[32m# Package control specific files[m
[32m+[m[32mPackage Control.last-run[m
[32m+[m[32mPackage Control.ca-list[m
[32m+[m[32mPackage Control.ca-bundle[m
[32m+[m[32mPackage Control.system-ca-bundle[m
[32m+[m[32mPackage Control.cache/[m
[32m+[m[32mPackage Control.ca-certs/[m
[32m+[m[32mPackage Control.merged-ca-bundle[m
[32m+[m[32mPackage Control.user-ca-bundle[m
[32m+[m[32moscrypto-ca-bundle.crt[m
[32m+[m[32mbh_unicode_properties.cache[m
[32m+[m
[32m+[m[32m# Sublime-github package stores a github token in this file[m
[32m+[m[32m# https://packagecontrol.io/packages/sublime-github[m
[32m+[m[32mGitHub.sublime-settings[m
[32m+[m
[32m+[m
[32m+[m[32m### Vim template[m
[32m+[m[32m# Swap[m
[32m+[m[32m[._]*.s[a-v][a-z][m
[32m+[m[32m[._]*.sw[a-p][m
[32m+[m[32m[._]s[a-v][a-z][m
[32m+[m[32m[._]sw[a-p][m
[32m+[m
[32m+[m[32m# Session[m
[32m+[m[32mSession.vim[m
[32m+[m
[32m+[m[32m# Temporary[m
[32m+[m[32m.netrwhist[m
[32m+[m
[32m+[m[32m# Auto-generated tag files[m
[32m+[m[32mtags[m
[32m+[m
[32m+[m[32m### Project template[m
[32m+[m[32mmedia/[m
[32m+[m[32m.pytest_cache/[m
[32m+[m[32mdb.sqlite3[m
[1mdiff --git a/blog/__init__.py b/blog/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/admin.py b/blog/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..8df2efe[m
[1m--- /dev/null[m
[1m+++ b/blog/admin.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m
[32m+[m[32m# Register your models here.[m
[32m+[m[32mfrom .models import Post[m
[32m+[m
[32m+[m[32madmin.site.register(Post)[m
\ No newline at end of file[m
[1mdiff --git a/blog/apps.py b/blog/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..94788a5[m
[1m--- /dev/null[m
[1m+++ b/blog/apps.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass BlogConfig(AppConfig):[m
[32m+[m[32m    default_auto_field = 'django.db.models.BigAutoField'[m
[32m+[m[32m    name = 'blog'[m
[1mdiff --git a/blog/migrations/0001_initial.py b/blog/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..b87b572[m
[1m--- /dev/null[m
[1m+++ b/blog/migrations/0001_initial.py[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m# Generated by Django 3.2.9 on 2021-11-14 09:38[m
[32m+[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mimport django.utils.timezone[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        migrations.swappable_dependency(settings.AUTH_USER_MODEL),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Post',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('title', models.CharField(max_length=200)),[m
[32m+[m[32m                ('text', models.TextField()),[m
[32m+[m[32m                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),[m
[32m+[m[32m                ('published_date', models.DateTimeField(blank=True, null=True)),[m
[32m+[m[32m                ('auth', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/blog/migrations/__init__.py b/blog/migrations/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/models.py b/blog/models.py[m
[1mnew file mode 100644[m
[1mindex 0000000..cd32201[m
[1m--- /dev/null[m
[1m+++ b/blog/models.py[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mfrom django.db import models[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.utils import timezone[m
[32m+[m
[32m+[m
[32m+[m[32m# Create your models here.[m
[32m+[m
[32m+[m[32mclass Post(models.Model):[m
[32m+[m[32m    auth = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)[m
[32m+[m[32m    title = models.CharField(max_length=200)[m
[32m+[m[32m    text = models.TextField()[m
[32m+[m[32m    created_date = models.DateTimeField(default=timezone.now)[m
[32m+[m[32m    published_date = models.DateTimeField(blank=True, null=True)[m
[32m+[m
[32m+[m[32m    def publish(self):[m
[32m+[m[32m        self.published_date = timezone.now()[m
[32m+[m[32m        self.save()[m
[32m+[m
[32m+[m[32m    def __str__(self):[m
[32m+[m[32m        return self.title[m
[1mdiff --git a/blog/templates/blog/README.md b/blog/templates/blog/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..7bc1621[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/README.md[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mFor each screen, add another html file to this folder.[m
[32m+[m[32mWe can refer to the html file in corresponding view function.[m
[1mdiff --git a/blog/templates/blog/post_list.html b/blog/templates/blog/post_list.html[m
[1mnew file mode 100644[m
[1mindex 0000000..d6ccd93[m
[1m--- /dev/null[m
[1m+++ b/blog/templates/blog/post_list.html[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m
[32m+[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en">[m
[32m+[m[32m    <head>[m
[32m+[m[32m        <title>Post list view</title>[m
[32m+[m
[32m+[m[32m        <meta name="description" content="Example HTML file">[m
[32m+[m[32m        <meta name="author" content="Pham Quoc Trung">[m
[32m+[m[32m        <style type="text/css">[m
[32m+[m[32m        /*[m
[32m+[m[32m          p {[m
[32m+[m[32m                color: #af2929;[m
[32m+[m[32m                font-size: 1.5em;[m
[32m+[m[32m            }[m
[32m+[m[32m            #myParagraph, button {[m
[32m+[m[32m                background: rgba(117, 195, 102, 1.0);[m
[32m+[m[32m            }[m
[32m+[m[32m        */[m
[32m+[m[32m        </style>[m
[32m+[m[32m    </head>[m
[32m+[m[32m    <body>[m
[32m+[m[32m        <!-- Loop through all posts and display the title, author and published[m
[32m+[m[32m            date.[m
[32m+[m[32m            See more: https://docs.djangoproject.com/en/3.2/ref/templates/builtins/#for-empty[m
[32m+[m[32m        -->[m
[32m+[m[32m        {% for post in posts %}[m
[32m+[m[32m            <p> <a href=""> {{ post.title }} </a> </p>[m
[32m+[m[32m            <p> {{ post.auth }} ({{ post.published_date }})</p>[m
[32m+[m
[32m+[m[32m        {# If there is no post, display the following text #}[m
[32m+[m[32m        {% empty %}[m
[32m+[m
[32m+[m[32m            <p> Nothing found. Please create some posts first. </p>[m
[32m+[m
[32m+[m[32m        {% endfor %}[m
[32m+[m
[32m+[m[32m    </body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/blog/tests.py b/blog/tests.py[m
[1mnew file mode 100644[m
[1mindex 0000000..7ce503c[m
[1m--- /dev/null[m
[1m+++ b/blog/tests.py[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32mfrom django.test import TestCase[m
[32m+[m
[32m+[m[32m# Create your tests here.[m
[1mdiff --git a/blog/urls.py b/blog/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..75e02a6[m
[1m--- /dev/null[m
[1m+++ b/blog/urls.py[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mfrom django.urls import path[m
[32m+[m
[32m+[m[32mfrom .views.hello_world import hello_world_view[m
[32m+[m[32mfrom .views.post_list import post_list_view[m
[32m+[m[32m# Add more imports for corresponding views[m
[32m+[m[32m# For example:[m
[32m+[m[32m# from .views.post_detail import post_detail[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path("hello_world/", hello_world_view, name="hello_world"),[m
[32m+[m[32m    path("post_list/", post_list_view, name="post_list"),[m
[32m+[m[32m    # Add more url paths for corresponding screens[m
[32m+[m[32m    # For example:[m
[32m+[m[32m    # path("post_detail/", post_detail_view),[m
[32m+[m[32m][m
[1mdiff --git a/blog/views/__init__.py b/blog/views/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/blog/views/hello_world.py b/blog/views/hello_world.py[m
[1mnew file mode 100644[m
[1mindex 0000000..4069cbd[m
[1m--- /dev/null[m
[1m+++ b/blog/views/hello_world.py[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mfrom django.http import HttpResponse[m
[32m+[m[32m# Create your views here.[m
[32m+[m
[32m+[m
[32m+[m[32mdef hello_world_view(request):[m
[32m+[m[32m    """ Simple hello_world view."""[m
[32m+[m[32m    return HttpResponse("hello_world!")[m
[1mdiff --git a/blog/views/post_list.py b/blog/views/post_list.py[m
[1mnew file mode 100644[m
[1mindex 0000000..25ac417[m
[1m--- /dev/null[m
[1m+++ b/blog/views/post_list.py[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mfrom django.shortcuts import render[m
[32m+[m[32m# Create your views here.[m
[32m+[m
[32m+[m[32mfrom blog.models import Post[m
[32m+[m
[32m+[m
[32m+[m[32mdef post_list_view(request):[m
[32m+[m[32m    """ A view that display a list of published posts."""[m
[32m+[m[32m    posts = Post.objects.all()[m
[32m+[m
[32m+[m[32m    context = {[m
[32m+[m[32m        "posts": posts[m
[32m+[m[32m    }[m
[32m+[m[32m    return render(request, "blog/post_list.html", context)[m
[1mdiff --git a/manage.py b/manage.py[m
[1mnew file mode 100644[m
[1mindex 0000000..27bc90a[m
[1m--- /dev/null[m
[1m+++ b/manage.py[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m#!/usr/bin/env python[m
[32m+[m[32m"""Django's command-line utility for administrative tasks."""[m
[32m+[m[32mimport os[m
[32m+[m[32mimport sys[m
[32m+[m
[32m+[m
[32m+[m[32mdef main():[m
[32m+[m[32m    """Run administrative tasks."""[m
[32m+[m[32m    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_blog.settings')[m
[32m+[m[32m    try:[m
[32m+[m[32m        from django.core.management import execute_from_command_line[m
[32m+[m[32m    except ImportError as exc:[m
[32m+[m[32m        raise ImportError([m
[32m+[m[32m            "Couldn't import Django. Are you sure it's installed and "[m
[32m+[m[32m            "available on your PYTHONPATH environment variable? Did you "[m
[32m+[m[32m            "forget to activate a virtual environment?"[m
[32m+[m[32m        ) from exc[m
[32m+[m[32m    execute_from_command_line(sys.argv)[m
[32m+[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m[32m    main()[m
[1mdiff --git a/my_blog/__init__.py b/my_blog/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/my_blog/asgi.py b/my_blog/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..aed8763[m
[1m--- /dev/null[m
[1m+++ b/my_blog/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for my_blog project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_blog.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/my_blog/settings.py b/my_blog/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..4332a39[m
[1m--- /dev/null[m
[1m+++ b/my_blog/settings.py[m
[36m@@ -0,0 +1,129 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for my_blog project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 3.2.9.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/3.2/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[32m+[m[32mBASE_DIR = Path(__file__).resolve().parent.parent[m
[32m+[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'django-insecure-6@kgu#1bg)42845j$t+_f^-%w-63wzdt4-zr@&)@y8y&9i0qw4'[m
[32m+[m